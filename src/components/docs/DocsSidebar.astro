---
import type { CollectionEntry } from 'astro:content'

interface Props {
    sections: [string, CollectionEntry<'docs'>[]][]
    currentPath: string
}

const { sections, currentPath } = Astro.props
---

<aside class="hidden w-72 shrink-0 border-r border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-950 lg:block">
  <div class="sticky top-16">
    <nav class="h-[calc(100vh-4rem)] overflow-y-auto py-2">
      <div class="px-4 sm:px-6 lg:px-8 py-6 space-y-8">
        {sections.map(([section, items]) => (
          <div>
            <h3 class="mb-2 px-2 text-sm font-semibold text-gray-900 dark:text-gray-300 uppercase tracking-wider">
              {section}
            </h3>
            <ul class="space-y-1">
              {items.map((doc) => (
                <li>
                  <a
                    href={`/docs/${doc.id}`}
                    class:list={[
                      'block rounded-md px-2 py-1.5 text-sm transition-all duration-200',
                      currentPath === `/docs/${doc.id}`
                        ? 'bg-brand-50 text-brand-600 font-medium dark:bg-brand-500/10 dark:text-brand-400'
                        : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-400 dark:hover:text-gray-200 dark:hover:bg-gray-900'
                    ]}
                  >
                    {doc.data.title}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </nav>
  </div>
</aside>

<style>
  nav::-webkit-scrollbar {
    width: 4px;
  }

  nav::-webkit-scrollbar-track {
    @apply bg-transparent;
  }

  nav::-webkit-scrollbar-thumb {
    @apply bg-gray-200 dark:bg-gray-800 rounded-full;
  }

  nav::-webkit-scrollbar-thumb:hover {
    @apply bg-gray-300 dark:bg-gray-700;
  }
</style>
