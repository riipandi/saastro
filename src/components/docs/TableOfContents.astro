---
import * as Lucide from 'lucide-astro'

interface TocItem {
    level: string
    title: string
    id: string
}

interface Props {
    toc: TocItem[]
}

const { toc } = Astro.props

// Helper function to normalize ID
function normalizeId(str: string) {
    return str
        .toLowerCase()
        .replace(/amp/g, '--')
        .replace(/&amp;/g, '--')
        .replace(/&/g, '--')
        .replace(/[^a-z0-9]+/g, '--')
        .replace(/\([^)]*\)/g, '')
        .replace(/-+/g, '--')
        .replace(/^-|-$/g, '')
}
---

<div class="sticky top-24 h-[calc(100vh-5rem)] overflow-y-auto pr-4 mb-[-200px]">
    {toc && toc.length > 0 && (
      <div class="mb-8">
        <h4 class="mb-4 text-sm font-semibold text-gray-900 dark:text-gray-300">On this page</h4>
        <nav id="toc" class="space-y-2.5">
          {toc.map(item => (
            <a
              href={`#${normalizeId(item.id)}`}
              class:list={[
                "block text-sm transition-colors",
                "text-gray-600 hover:text-brand-600 dark:text-gray-300 dark:hover:text-brand-400",
                item.level === "h3" && "pl-4",
              ]}
              set:html={item.title}
            />
          ))}
        </nav>
      </div>
    )}

    <!-- External Links -->
    <div class="mt-8">
        <h4 class="mb-4 text-sm font-semibold text-gray-900 dark:text-gray-300">Resources</h4>
        <nav class="space-y-2.5">
            <a
                href="/github"
                class="flex items-center gap-2 text-sm text-gray-600 hover:text-brand-600 dark:text-gray-300 dark:hover:text-brand-400"
                target="_blank"
                rel="noopener noreferrer"
            >
                <Lucide.Github class="size-4" />
                <span>GitHub</span>
            </a>
        </nav>
    </div>
</div>

<script>
  function initTocHighlight() {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const id = entry.target.getAttribute('id');
          const tocLink = document.querySelector(`#toc a[href="#${id}"]`);

          if (entry.isIntersecting) {
            document.querySelectorAll('#toc a').forEach((link) => {
              link.classList.remove('text-brand-600', 'dark:text-brand-400');
            });
            tocLink?.classList.add('text-brand-600', 'dark:text-brand-400');
          }
        });
      },
      {
        rootMargin: '-100px 0% -66% 0%',
        threshold: 1.0,
      }
    );
    document.querySelectorAll('article h2, article h3').forEach((heading) => {
      observer.observe(heading);
    });
  }

  document.addEventListener('astro:page-load', initTocHighlight);
  initTocHighlight();
</script>
